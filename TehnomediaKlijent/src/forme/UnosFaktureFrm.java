/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.AbstractObjekat;
import domen.Kompanija;
import domen.RukovodilacSektoraNabavke;
import domen.Faktura;
import domen.Proizvod;
import domen.StavkaFakture;
import exception.ValidacijaException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import model.ModelTabeleProizvod;
import model.ModelTabeleStavki;

/**
 *
 * @author Bojana
 */
public class UnosFaktureFrm extends javax.swing.JFrame {

    JFrame glavna;
    String status;
    ModelTabeleStavki mts;
    Faktura faktura;
    ModelTabeleProizvod mtp;

    /**
     * Creates new form UnosFaktureFrm
     */
    public UnosFaktureFrm() {
        initComponents();
    }

    public UnosFaktureFrm(JFrame glavna, RukovodilacSektoraNabavke rukovodilac) {
        initComponents();
        setLocationRelativeTo(null);
        this.glavna = glavna;
        this.setTitle("Unos fakture");
        faktura = new Faktura("0", new Date(), 0.0, rukovodilac, null);
        popuniTabeluProizvodi();
        this.status = "unos";
        popuniCBKompanije();
        srediFormu();
        srediTabelu();
    }

    UnosFaktureFrm(JFrame forma, RukovodilacSektoraNabavke ulogovan, Faktura faktura) {
        initComponents();
        this.setTitle("Izmena fakture");
        this.glavna = forma;
        this.status = "izmena";
        popuniTabeluProizvodi();
        popuniCBKompanije();
        this.faktura = faktura;

        srediTabelu();
        srediFormu(faktura);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFakturaID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRukovodilacSektoraNabavke = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbKompanija = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIznosZaPlacanje = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnIzbrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaStavki = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProizvodi = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        txtDatum = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("FakturaID:");

        jLabel2.setText("Rukovodilac sektora nabavke:");

        jLabel3.setText("Kompanija:");

        cmbKompanija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Datum:");

        jLabel5.setText("Iznos za plaćanje:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavke fakture"));

        btnIzbrisi.setText("Izbriši stavku");
        btnIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbrisiActionPerformed(evt);
            }
        });

        tabelaStavki.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaStavki);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzbrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIzbrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Proizvodi"));

        tabelaProizvodi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaProizvodi);

        btnDodaj.setText("Dodaj proizvod");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(183, 183, 183))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFakturaID, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRukovodilacSektoraNabavke, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbKompanija, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtIznosZaPlacanje, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFakturaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRukovodilacSektoraNabavke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbKompanija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIznosZaPlacanje, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        int red = tabelaProizvodi.getSelectedRow();
        if (red != -1) {
            Proizvod p = (Proizvod) mtp.getLista().get(red);
            mts.dodajStavku(p, faktura);
            mts.postaviRB();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Izaberite proizvod koji želite da dodate!");
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzbrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbrisiActionPerformed
        int red = tabelaStavki.getSelectedRow();
        if (red != -1) {
            mts.izbaciStavku(red);
            mts.postaviRB();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Izaberite stavku koju želite da izbacite!");
        }
    }//GEN-LAST:event_btnIzbrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {

            Kompanija k = (Kompanija) cmbKompanija.getSelectedItem();
            validirajIPostaviVrednosti(k);
            Faktura fak;
            if (status.equals("unos")) {
                fak = (Faktura) Kontroler.vratiInstancu().sacuvajFakturu(faktura);
                JOptionPane.showMessageDialog(this, "Uspešno ste sačuvali fakturu:\nID: " + fak.getFakturaID() + "\nIznos za placanje: " + fak.getIznosZaPlacanje() + "\nRukovodilac sektora nabavke: " + fak.getRukovodilacSektoraNabavke().toString(), "Uspešno", JOptionPane.INFORMATION_MESSAGE);
            } else {
                List<AbstractObjekat> listaZaMenjanje = napraviListuStavki();
                faktura.setListaStavki(mts.getLista());
                fak = (Faktura) Kontroler.vratiInstancu().izmeniFakturu(faktura);
                JOptionPane.showMessageDialog(this, "Izmenjena je faktura:\nID: " + fak.getFakturaID() + "\nIznos za placanje: " + fak.getIznosZaPlacanje() + "\nRukovodilac sektora nabavke: " + fak.getRukovodilacSektoraNabavke().toString(), "Uspešno", JOptionPane.INFORMATION_MESSAGE);
            }
            glavna.setVisible(true);
            dispose();
        } catch (ValidacijaException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška kod validacije", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom cuvanja fakture!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosFaktureFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosFaktureFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosFaktureFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosFaktureFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnosFaktureFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzbrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKompanija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaProizvodi;
    private javax.swing.JTable tabelaStavki;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtFakturaID;
    private javax.swing.JTextField txtIznosZaPlacanje;
    private javax.swing.JTextField txtRukovodilacSektoraNabavke;
    // End of variables declaration//GEN-END:variables

    private void popuniCBKompanije() {

        try {
            List<AbstractObjekat> listaTipova = Kontroler.vratiInstancu().ucitajKompanije();
            cmbKompanija.setModel(new DefaultComboBoxModel(listaTipova.toArray()));
            cmbKompanija.setSelectedItem(null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void srediFormu() {

        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        txtDatum.setEnabled(false);
        String datum = sdf.format(faktura.getDatum());
        txtDatum.setText(datum);
        txtFakturaID.setEnabled(false);
        txtIznosZaPlacanje.setEnabled(false);
        txtRukovodilacSektoraNabavke.setText(faktura.getRukovodilacSektoraNabavke().toString());
        txtRukovodilacSektoraNabavke.setEnabled(false);

    }

    private void srediTabelu() {

        mts = new ModelTabeleStavki();
        mts.setTxtIznos(txtIznosZaPlacanje);
        tabelaStavki.setModel(mts);
    }

    private void popuniTabeluProizvodi() {
        try {
            List<AbstractObjekat> proizvodi = Kontroler.vratiInstancu().ucitajProizvode();
            mtp = new ModelTabeleProizvod(proizvodi);
            tabelaProizvodi.setModel(mtp);
        } catch (Exception ex) {
            Logger.getLogger(UnosKompanijeFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void validirajIPostaviVrednosti(Kompanija k) throws Exception {

        if (k == null) {
            throw new ValidacijaException("Morate odabrati kompaniju!");
        }

        List<AbstractObjekat> listaStavki = mts.getLista();
        if (listaStavki.isEmpty()) {
            throw new ValidacijaException("Morate uneti makar jednu stavku!");
        }

        String iznosNarudzbine = txtIznosZaPlacanje.getText();
        double iznos = Double.parseDouble(iznosNarudzbine);
        faktura.setKompanija(k);

        faktura.setListaStavki((ArrayList<AbstractObjekat>) listaStavki);
        faktura.setIznosZaPlacanje(iznos);
    }

    private void srediFormu(Faktura faktura) {

        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        srediFormu();
        txtFakturaID.setText(faktura.getFakturaID());
        txtIznosZaPlacanje.setText(faktura.getIznosZaPlacanje() + "");
        txtRukovodilacSektoraNabavke.setText(faktura.getRukovodilacSektoraNabavke().toString());
        txtDatum.setText(sdf.format(faktura.getDatum()));
        cmbKompanija.setSelectedItem(faktura.getKompanija());
        mts.setLista(faktura.getListaStavki());
        mts.popuniOriginalnuListu(faktura.getListaStavki());
        mts.fireTableDataChanged();
    }

    private List<AbstractObjekat> napraviListuStavki() {
        List<AbstractObjekat> listaZaSlanje = new ArrayList<>();
        List<AbstractObjekat> originalnaLista = mts.getOriginalnaLista();
        List<AbstractObjekat> listaStavki = mts.getLista();
        for (AbstractObjekat ao : originalnaLista) {
            StavkaFakture originalnaStavka = (StavkaFakture) ao;
            boolean obrisana = true;
            for (AbstractObjekat ao1 : listaStavki) {
                StavkaFakture stavka = (StavkaFakture) ao1;
                if (originalnaStavka.getProizvod().equals(stavka.getProizvod())) {
                    obrisana = false;
                    break;
                }
            }
            if (obrisana) {
                originalnaStavka.setStanje("obrisana");
                listaZaSlanje.add(originalnaStavka);
            }
        }
        listaZaSlanje.addAll(listaStavki);
        return listaZaSlanje;
    }

}
